pipeline {
    agent any

    environment {
        GITHUB_CREDENTIALS = 'mikelesnr'
        DOCKER_CREDENTIALS = 'dockerhub-credentials'
        DOCKER_IMAGE = 'mikelesnr/messaging_app'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', credentialsId: "${env.GITHUB_CREDENTIALS}", url: 'https://github.com/mikelesnr/alx-backend-python.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'pip3 install -r messaging_app/requirements.txt'
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    sh 'pytest --junitxml=report.xml messaging_app/tests/'
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${DOCKER_IMAGE} .'
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: "${env.DOCKER_CREDENTIALS}", usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo Michael2331# | docker login -u mikelesnr --password-stdin'
                        sh 'docker push ${DOCKER_IMAGE}'
                    }
                }
            }
        }
        stage('Publish Report') {
            steps {
                script {
                    junit 'report.xml'
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'report.xml', allowEmptyArchive: true
        }
    }
}
